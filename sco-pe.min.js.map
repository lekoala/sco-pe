{
  "version": 3,
  "sources": ["src/Scope.js", "sco-pe.js"],
  "sourcesContent": ["/**\n * @typedef {Function} PromiseHandler\n * @returns {Promise}\n */\n\n/**\n * @typedef ScopeConfig\n * @property {Boolean} debug\n * @property {Number} debounceTime\n * @property {String} activeClass\n * @property {String} reloadHeader\n * @property {String} titleHeader\n * @property {String} styleHeader\n * @property {String} scriptHeader\n * @property {PromiseHandler} confirmHandler\n * @property {String} statusHeader\n * @property {Function} statusHandler\n * @property {Function} onLoad\n */\nlet config = {\n  debug: false,\n  debounceTime: 300,\n  activeClass: \"active\",\n  reloadHeader: \"X-Reload\",\n  titleHeader: \"X-Title\",\n  cssHeader: \"x-include-css\",\n  jsHeader: \"x-include-js\",\n  confirmHandler: (message) => {\n    return new Promise((resolve, reject) => {\n      if (confirm(message)) {\n        resolve();\n      } else {\n        reject();\n      }\n    });\n  },\n  statusHeader: \"X-Status\",\n  statusHandler: (message, statusCode) => {\n    alert(message);\n  },\n  onLoad: (scope) => {},\n};\n\n/**\n * @type {AbortController}\n */\nlet globalAbortController = null;\n\n/**\n * @param {HTMLElement} el\n * @returns {Array}\n */\nfunction getEvents(el) {\n  if (el instanceof HTMLFormElement) {\n    return [\"submit\"];\n  }\n  const ev = el.dataset.scopeOn || \"click\";\n  return ev.split(\",\");\n}\n\n/**\n * @param {HTMLElement} el\n * @returns {String}\n */\nfunction getAction(el) {\n  return (\n    el.getAttribute(\"action\") ||\n    el.dataset.scopeAction ||\n    el.getAttribute(\"href\")\n  );\n}\n\n/**\n * @param {Function} func\n * @param {number} timeout\n * @returns {Function}\n */\nfunction debounce(func, timeout = 300) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      //@ts-ignore\n      func.apply(this, args);\n    }, timeout);\n  };\n}\n\n/**\n * @param {*} v\n * @returns {Boolean}\n */\nfunction parseBool(v) {\n  return [\"1\", \"true\", true, 1].includes(v);\n}\n\n/**\n * @param {HTMLElement} el\n * @param {HTMLElement} parentScope\n * @returns {Boolean}\n */\nfunction getHistory(el, parentScope = null) {\n  let history = \"true\";\n  if (el.dataset.scopeHistory) {\n    history = el.dataset.scopeHistory;\n  } else if (parentScope && parentScope.dataset.scopeHistory) {\n    history = parentScope.dataset.scopeHistory;\n  }\n  return parseBool(history);\n}\n\n/**\n * @param {String} html\n * @return {Document}\n */\nfunction htmlToDocument(html) {\n  const parser = new DOMParser();\n  return parser.parseFromString(html, \"text/html\");\n}\n\n/**\n * @param {Element} node\n * @returns {Boolean}\n */\nfunction isNodeEmpty(node) {\n  return node.textContent.trim() === \"\" && !node.firstElementChild;\n}\n\n/**\n * @param {String|URL} url\n * @returns {URL}\n */\nfunction expandURL(url) {\n  return new URL(url.toString(), document.baseURI);\n}\n\n/**\n * @param {String|URL} url\n * @returns {Boolean}\n */\nfunction isExternalURL(url) {\n  return expandURL(url).origin !== location.origin;\n}\n\n/**\n * @param {URL} url\n * @returns {String}\n */\nfunction getAnchor(url) {\n  let anchorMatch;\n  if (url.hash) {\n    return url.hash.slice(1);\n  } else if ((anchorMatch = url.href.match(/#(.*)$/))) {\n    return anchorMatch[1];\n  }\n  return null;\n}\n\n/**\n * @param {String|URL} url\n * @returns {Boolean}\n */\nfunction isAnchorURL(url) {\n  return getAnchor(expandURL(url)) !== null;\n}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nfunction simpleHash(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash &= hash; // Convert to 32bit integer\n  }\n  return new Uint32Array([hash])[0].toString(36);\n}\n\n/**\n * @param {String} message\n */\nfunction log(message) {\n  if (config.debug) {\n    console.log(`[sco-pe] ${message}`);\n  }\n}\n\n// Make a full page load on back\nwindow.addEventListener(\"popstate\", (event) => {\n  if (!event.state) {\n    return;\n  }\n  const id = event.state.id || null;\n  if (!id) {\n    return;\n  }\n  /**\n   * @type {Scope}\n   */\n  const scope = document.querySelector(`sco-pe[id=\"${id}\"]`);\n  if (!scope) {\n    return;\n  }\n  log(`Restore location from history`);\n  scope.loadURL(document.location.toString());\n});\n\nclass Scope extends HTMLElement {\n  constructor() {\n    super();\n\n    /**\n     * @type {AbortController}\n     */\n    this.abortController = null;\n    /**\n     * @type {Boolean}\n     */\n    this.init = false;\n    /**\n     * @type {Array}\n     */\n    this.events = [\"click\", \"submit\"];\n    /**\n     * @type {Function}\n     */\n    this.loadFunc = debounce((trigger) => {\n      this.load(trigger);\n    }, config.debounceTime);\n  }\n\n  /**\n   * @param {ScopeConfig|Object} data\n   */\n  static configure(data) {\n    config = Object.assign(config, data);\n  }\n\n  handleEvent(ev) {\n    // Check for nested scope\n    if (ev.target.closest(\"sco-pe\") !== this) {\n      return;\n    }\n\n    // Don't handle events if disabled\n    if (parseBool(this.dataset.scopeDisabled)) {\n      return;\n    }\n\n    /**\n     * @type {HTMLElement}\n     */\n    let trigger = ev.target.closest(\"a,button,[data-scope-action]\");\n\n    if (ev.type === \"submit\") {\n      trigger = ev.target;\n    }\n\n    if (trigger) {\n      const events = getEvents(trigger);\n      // Ignore events that we don't watch\n      if (!events.includes(ev.type)) {\n        return;\n      }\n      const action = getAction(trigger);\n      // Ignore empty, external and anchors links\n      if (!action || isExternalURL(action) || isAnchorURL(action)) {\n        return;\n      }\n      log(`Handling ${ev.type} on ${trigger.nodeName}`);\n      ev.preventDefault();\n\n      const load = () => {\n        // For click, no debounce\n        if (ev.type === \"click\") {\n          this.load(trigger);\n        } else {\n          this.loadFunc(trigger);\n        }\n      };\n      // Check confirm ?\n      if (trigger.dataset.scopeConfirm) {\n        config\n          .confirmHandler(trigger.dataset.scopeConfirm)\n          .then(load)\n          .catch((err) => null);\n      } else {\n        load();\n      }\n    }\n  }\n\n  abortLoading() {\n    if (this.abortController) {\n      this.abortController.abort();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} el\n   */\n  async load(el) {\n    // Build url\n    let action = getAction(el);\n    let url = new URL(action, window.location.href).href; // make absolute\n    let urlWithParams = url;\n    const isLink = el.nodeName === \"A\";\n    const method = (\n      el.getAttribute(\"method\") ||\n      el.dataset.scopeMethod ||\n      \"GET\"\n    ).toUpperCase();\n    // Update history for links for named scopes\n    let pushToHistory =\n      isLink && getHistory(el, this) && this.hasAttribute(\"id\");\n    let postBody;\n\n    // Pass along current query string and params for elements with value\n    const searchParams = new URLSearchParams(window.location.search);\n    //@ts-ignore\n    const elValue = el.value !== \"undefined\" ? el.value : el.dataset.scopeValue;\n    if (typeof elValue !== \"undefined\") {\n      searchParams.set(\"value\", elValue);\n      urlWithParams = `${url}?${searchParams.toString()}`;\n      postBody = searchParams;\n    }\n\n    // Pass form data\n    if (el instanceof HTMLFormElement) {\n      const formData = new FormData(el);\n      postBody = formData;\n    }\n\n    // Do we target a specific scope ?\n    // Always use GET request for sco-pe requests and delegate loading to instance\n    const target = el.dataset.scopeTarget || this.dataset.scopeTarget;\n    if (target && target !== \"_self\") {\n      log(`Loading partial document into scope ${target}`);\n      document.getElementById(target).setAttribute(\"src\", urlWithParams);\n      return;\n    }\n\n    if (pushToHistory) {\n      const id = this.getAttribute(\"id\");\n      const state = {\n        id,\n        url,\n      };\n      history.pushState(state, null, url);\n    }\n    if (isLink) {\n      this.querySelectorAll(`.${config.activeClass}`).forEach((el) => {\n        el.classList.remove(config.activeClass);\n      });\n      el.classList.add(config.activeClass);\n    }\n\n    if (method === \"GET\") {\n      url = urlWithParams;\n    }\n    const body = method === \"POST\" ? postBody : null;\n    await this.loadURL(url, {\n      method,\n      body,\n    });\n  }\n\n  /**\n   * @param {String} url\n   * @param {Object} fetchOptions\n   */\n  async loadURL(url, fetchOptions = {}) {\n    if (!fetchOptions.signal) {\n      // If not targeting a specific scope, we use a global context\n      if (globalAbortController) {\n        globalAbortController.abort();\n      }\n      globalAbortController = new AbortController();\n      fetchOptions.signal = globalAbortController.signal;\n    }\n    const options = Object.assign(\n      {\n        method: \"GET\",\n      },\n      fetchOptions\n    );\n    const response = await fetch(url, options);\n    if (!response.ok) {\n      const message =\n        response.headers.get(config.statusHeader) || response.statusText;\n      config.statusHandler(message, response.status);\n      return;\n    }\n    this.processHeaders(response);\n    const data = await response.text();\n    this.processResponse(data);\n  }\n\n  /**\n   * @param {Response} response\n   */\n  processHeaders(response) {\n    if (config.statusHeader) {\n      const status = response.headers.get(config.statusHeader);\n      if (status) {\n        config.statusHandler(status, response.status);\n      }\n    }\n    if (config.titleHeader) {\n      const title = response.headers.get(config.titleHeader);\n      if (title) {\n        document.title = title;\n      }\n    }\n    if (config.reloadHeader) {\n      const reload = response.headers.get(config.reloadHeader);\n      if (reload) {\n        window.location.reload();\n      }\n    }\n    if (config.jsHeader) {\n      const js = response.headers.get(config.jsHeader);\n      if (js) {\n        js.split(\",\").forEach((src) => {\n          this._loadScript(src);\n        });\n      }\n    }\n    if (config.cssHeader) {\n      const css = response.headers.get(config.cssHeader);\n      if (css) {\n        css.split(\",\").forEach((src) => {\n          this._loadStyle(src);\n        });\n      }\n    }\n  }\n\n  /**\n   * @param {HTMLHeadElement} head\n   */\n  processHead(head) {\n    log(`Process head`);\n\n    // Update title\n    const title = head.querySelector(\"title\");\n    if (title) {\n      document.title = title.textContent;\n    }\n  }\n\n  _loadScript(src, type = null) {\n    if (!type) {\n      type = \"text/javascript\";\n    }\n    const existingScript = document.querySelector(`script[src=\"${src}\"]`);\n    if (existingScript) {\n      return;\n    }\n    log(`Loading script ${src}`);\n    const newScript = document.createElement(\"script\");\n    newScript.setAttribute(\"type\", type);\n    newScript.setAttribute(\"src\", src);\n    document.head.appendChild(newScript);\n  }\n\n  _loadStyle(href) {\n    const existingStyle = document.querySelector(`link[href=\"${href}\"]`);\n    if (existingStyle) {\n      return;\n    }\n    log(`Loading style ${href}`);\n    const newStyle = document.createElement(\"link\");\n    newStyle.setAttribute(\"rel\", \"stylesheet\");\n    newStyle.setAttribute(\"href\", href);\n    document.head.appendChild(newStyle);\n  }\n\n  processScriptsAndStyles(doc) {\n    // Make sure our existing inline scripts & styles have a custom id\n    document\n      .querySelectorAll(\"script:not([src]):not([id]),style:not([id])\")\n      .forEach((el) => {\n        const hash = simpleHash(el.innerHTML);\n        const id = `${el.nodeName.toLowerCase()}-${hash}`;\n        el.setAttribute(\"id\", id);\n      });\n\n    // Append new styles and scripts\n    doc.querySelectorAll(\"script\").forEach((script) => {\n      const src = script.getAttribute(\"src\");\n      const type = script.type || \"text/javascript\";\n      if (!src) {\n        // Inline scripts are always executed except unless they have an id\n        const hash = simpleHash(script.innerHTML);\n        const id = script.getAttribute(\"id\") || `script-${hash}`;\n        const existingInlineScript = document.querySelector(\n          `script[id=\"${id}\"]`\n        );\n        if (existingInlineScript && script.getAttribute(\"id\")) {\n          return;\n        }\n        log(`Loading inline script`);\n        const inlineScript = document.createElement(\"script\");\n        inlineScript.setAttribute(\"type\", type);\n        inlineScript.setAttribute(\"id\", id);\n        inlineScript.innerHTML = script.innerHTML;\n        if (existingInlineScript) {\n          existingInlineScript.replaceWith(inlineScript);\n        } else {\n          document.head.appendChild(inlineScript);\n        }\n      } else {\n        this._loadScript(src, type);\n      }\n    });\n\n    doc.querySelectorAll('style,link[rel=\"stylesheet\"]').forEach((style) => {\n      const href = style.getAttribute(\"href\");\n      if (!href) {\n        // Inline styles get a unique hash based on their content to avoid loading them multiple times\n        const hash = simpleHash(style.innerHTML);\n        const id = style.getAttribute(\"id\") || `style-${hash}`;\n        const existingInlineStyle = document.querySelector(`style[id=\"${id}\"]`);\n        if (existingInlineStyle) {\n          return;\n        }\n        log(`Loading inline style`);\n        const inlineStyle = document.createElement(\"style\");\n        inlineStyle.innerHTML = style.innerHTML;\n        inlineStyle.setAttribute(\"id\", id);\n        document.head.appendChild(inlineStyle);\n      } else {\n        this._loadStyle(href);\n      }\n    });\n  }\n\n  /**\n   * @param {String} data\n   */\n  processResponse(data) {\n    // The response can be a full html document or a partial document\n    const isFull = data.match(/<!doctype\\s+html[\\s>]/i);\n\n    // It may contain one or more sco-pe to replace\n    const containsScope = data.indexOf(\"<sco-pe\") !== -1;\n\n    if (isFull || containsScope) {\n      log(`Loading scopes ${isFull ? \"(full)\" : \"(partial)\"}`);\n\n      const tmp = htmlToDocument(data);\n\n      const head = tmp.querySelector(\"head\");\n      if (head) {\n        this.processHead(head);\n      }\n      this.processScriptsAndStyles(tmp);\n\n      // Replace any matching sco-pe by id\n      const scopes = tmp.querySelectorAll(\"sco-pe\");\n      scopes.forEach((newScope) => {\n        const id = newScope.getAttribute(\"id\");\n        if (!id) {\n          log(`Scope without id`);\n          return;\n        }\n        if (isNodeEmpty(newScope)) {\n          log(`Empty scope for ${id}`);\n          return;\n        }\n        const oldScope = document.getElementById(id);\n        if (!oldScope) {\n          log(`No matching scope for ${id}`);\n          return;\n        }\n        log(`Replacing ${id}`);\n        oldScope.outerHTML = newScope.outerHTML;\n        // afterLoad will happen automatically through connectedCallback\n      });\n    } else {\n      log(`Loading partial document into self`);\n      this.innerHTML = data;\n      this.afterLoad();\n    }\n  }\n\n  async loadContent(check = false) {\n    const src = this.src;\n    const preventLoading = check && !isNodeEmpty(this);\n    if (src && !preventLoading) {\n      this.abortLoading();\n      this.abortController = new AbortController();\n      await this.loadURL(src, {\n        signal: this.abortController.signal,\n      });\n    }\n    this.afterLoad();\n  }\n\n  afterLoad() {\n    this.listenToEvents();\n\n    // Mark active class in any link matching href\n    this.querySelectorAll(`a`).forEach((a) => {\n      const url = expandURL(a.getAttribute(\"href\"));\n      if (url.toString() == document.location.href) {\n        a.classList.add(config.activeClass);\n      }\n    });\n\n    config.onLoad(this);\n    this.classList.remove(\"scope-loading\");\n    this.classList.add(\"scope-loaded\");\n  }\n\n  listenToEvents() {\n    // Intercept all relevant events\n    this.querySelectorAll(\"[data-scope-on]\").forEach(\n      /**\n       * @param {HTMLElement} el\n       */\n      (el) => {\n        this.events = this.events.concat(getEvents(el));\n      }\n    );\n\n    this.events.forEach((event) => {\n      this.addEventListener(event, this);\n    });\n  }\n\n  /**\n   * @param {String} url\n   * @param {Object} fetchOptions\n   * @returns {Promise<String>}\n   */\n  async fetchSelf(url, fetchOptions = {}) {\n    this.abortLoading();\n    this.abortController = new AbortController();\n    const options = Object.assign(\n      {\n        signal: this.abortController.signal,\n      },\n      fetchOptions\n    );\n    const response = await fetch(url, options);\n    return await response.text();\n  }\n\n  static get observedAttributes() {\n    return [\"src\"];\n  }\n\n  set src(v) {\n    this.setAttribute(\"src\", v);\n  }\n\n  get src() {\n    return this.getAttribute(\"src\");\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    if (!this.init) {\n      return;\n    }\n    switch (attr) {\n      case \"src\":\n        this.loadContent();\n        break;\n    }\n  }\n\n  connectedCallback() {\n    this.classList.add(\"scope-loading\");\n\n    // delay execution until the Event Loop is done and all DOM is parsed\n    // @link https://stackoverflow.com/questions/70949141/web-components-accessing-innerhtml-in-connectedcallback/75402874\n    setTimeout(() => {\n      // content can be provided by server rendering, in this case, don't load\n      this.loadContent(true);\n      this.init = true;\n      log(`Scope created ${this.id}`);\n    });\n  }\n\n  disconnectedCallback() {\n    this.events.forEach((event) => {\n      this.removeEventListener(event, this);\n    });\n  }\n}\n\nexport default Scope;\n", "import Scope from \"./src/Scope.js\";\n\ncustomElements.define(\"sco-pe\", Scope);\n"],
  "mappings": "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",
  "names": []
}
